#!/bin/bash

# This uses MFA devices to get temporary (eg 12 hour) credentials.  Requires
# a TTY for user input.
#
# GPL 2 or higher
if [[ $# -ge 1 ]]; then
    AWS_PROFILE="$1"
else
    read -p 'Enter AWS_PROFILE: ' AWS_PROFILE
fi

caller_identity=($(aws --profile "$AWS_PROFILE" sts get-caller-identity --output text))

AWS_ACCOUNT_NUMBER="${caller_identity[0]}"
AWS_IAM_USER_ARN="${caller_identity[1]}"
AWS_IAM_USERNAME="$(basename "$AWS_IAM_USER_ARN")"
MFA_SERIAL="arn:aws:iam::$AWS_ACCOUNT_NUMBER:mfa/virtual"
YK_PROFILE="yubikey"

if [ ! -t 0 ]
then
  echo Must be on a tty >&2
  exit 255
fi

if [ -n "$AWS_SESSION_TOKEN" ]
then
  echo "Session token found.  This can not be used to generate a new token.
   unset AWS_SESSION_TOKEN AWS_SECRET_ACCESS_KEY AWS_ACCESS_KEY_ID
and then ensure you have a profile with the normal access key credentials or
set the variables to the normal keys.
" >&2
  exit 255
fi

identity=$(aws sts get-caller-identity)
username=$(echo -- "$identity" | sed -n 's!.*"arn:aws:iam::.*:user/\(.*\)".*!\1!p')
if [ -z "$username" ]
then
  echo "Can not identify who you are.  Looking for a line like
    arn:aws:iam::.....:user/FOO_BAR
but did not find one in the output of
  aws sts get-caller-identity

$identity" >&2
  exit 255
fi

echo You are: $username >&2
#If MFA_SERIAL not defined try to find it
if [ -z $MFA_SERIAL ]
then
  mfa=$(aws iam list-mfa-devices --user-name "$username")
  device=$(echo -- "$mfa" | sed -n 's!.*"SerialNumber": "\(.*\)".*!\1!p')
  if [ -z "$device" ]
  then
    echo "Can not find any MFA device for you.  Looking for a SerialNumber
  but did not find one in the output of
    aws iam list-mfa-devices --username \"$username\"

  $mfa" >&2
    exit 255
  fi
else 
  device=$MFA_SERIAL
fi
echo Your MFA device is: $device >&2


##Yubikey things
tmpdir=$(mktemp -d)
trap "rm -rf '$tmpdir'" EXIT

if ykman oath info > "$tmpdir/yk-oath-info" 2>&1 ; then
    echo "Trying to read MFA code from Yubikey."
    cat "$tmpdir/yk-oath-info"
    #rm -f "$tmpdir/yk-oath-info"

    ykman oath accounts code $YK_PROFILE  2>&1 | tee "$tmpdir/yk-mfa-code"
    otp_token=$(grep -F "$YK_PROFILE" "$tmpdir/yk-mfa-code" | awk '{print $NF}')
    #rm -f "$tmpdir/yk-mfa-code"
    [[ -z "$otp_token" ]] && exit 1
else
    read -p 'Enter MFA code: ' otp_token
fi

rm -rf "$tmpdir"
##

tokens=$(aws sts get-session-token --serial-number "$device" --token-code $otp_token)

secret=$(echo -- "$tokens" | sed -n 's!.*"SecretAccessKey": "\(.*\)".*!\1!p')
session=$(echo -- "$tokens" | sed -n 's!.*"SessionToken": "\(.*\)".*!\1!p')
access=$(echo -- "$tokens" | sed -n 's!.*"AccessKeyId": "\(.*\)".*!\1!p')
expire=$(echo -- "$tokens" | sed -n 's!.*"Expiration": "\(.*\)".*!\1!p')

if [ -z "$secret" -o -z "$session" -o -z "$access" ]
then
  echo "Unable to get temporary credentials.  Could not find secret/access/session entries

$tokens" >&2
  exit 255
fi
clear
echo export AWS_PROFILE=$AWS_PROFILE
echo export AWS_SESSION_TOKEN=$session
echo export AWS_SECRET_ACCESS_KEY=$secret
echo export AWS_ACCESS_KEY_ID=$access

echo Keys valid until $expire >&2
