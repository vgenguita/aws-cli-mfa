#!/bin/bash

# This uses MFA devices to get temporary (eg 12 hour) credentials.  Requires
# a TTY for user input.
#
# GPL 2 or higher
if [[ $# -ge 1 ]]; then
    AWS_ROLE=$1
else
    read -p 'Enter AWS_ROLE: ' AWS_ROLE
fi
AWS_PROFILE=default
caller_identity=($(aws --profile "$AWS_PROFILE" sts get-caller-identity --output text))
AWS_ACCOUNT_NUMBER="${caller_identity[0]}"
AWS_IAM_USER_ARN="${caller_identity[1]}"
AWS_IAM_USERNAME="$(basename "$AWS_IAM_USER_ARN")"
AWS_ROLE_ARN="arn:aws:iam::$AWS_ACCOUNT_NUMBER:role/$AWS_ROLE"
MFA_SERIAL="arn:aws:iam::$AWS_ACCOUNT_NUMBER:mfa/virtual"
YK_PROFILE="yubikey"

if [ ! -t 0 ]
then
  echo Must be on a tty >&2
  exit 255
fi


echo You are: $username >&2

tokens=$(aws sts assume-role --role-arn $AWS_ROLE_ARN --role-session-name $AWS_ROLE)

secret=$(echo -- "$tokens" | sed -n 's!.*"SecretAccessKey": "\(.*\)".*!\1!p')
session=$(echo -- "$tokens" | sed -n 's!.*"SessionToken": "\(.*\)".*!\1!p')
access=$(echo -- "$tokens" | sed -n 's!.*"AccessKeyId": "\(.*\)".*!\1!p')
expire=$(echo -- "$tokens" | sed -n 's!.*"Expiration": "\(.*\)".*!\1!p')

if [ -z "$secret" -o -z "$session" -o -z "$access" ]
then
  echo "Unable to get temporary credentials.  Could not find secret/access/session entries

$tokens" >&2
  exit 255
fi
clear
echo export AWS_PROFILE=$AWS_PROFILE
echo export AWS_SESSION_TOKEN=$session
echo export AWS_SECRET_ACCESS_KEY=$secret
echo export AWS_ACCESS_KEY_ID=$access

echo Keys valid until $expire >&2
